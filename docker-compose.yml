volumes:
  pgdata:
  static:


services:

  django:
    build:
      context: .
    ports:
      - '8000:8000'
    container_name: django
    env_file:
      - docker/env/.env.prod
    volumes:
      - ./:/API_science
      - static:/API_science/static
    depends_on:
      - postgres
    command: sh -c "python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py loaddata fixtures/people.json &&
                    python manage.py loaddata fixtures/types.json &&
                    python manage.py loaddata fixtures/AllUnion.json &&
                    gunicorn --workers=4 --reload --max-requests=1000 backend.wsgi -b 0.0.0.0:8000"

  nginx:
    container_name: nginxTest
    working_dir: /API_science
    image: nginx:stable-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/API_science/static
      - ./docker/nginx/:/etc/nginx/conf.d:ro
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
    links:
      - django
    depends_on:
      - django

  postgres:
    image: postgres:alpine
    container_name: postgresTest
    restart: always
    env_file:
      - docker/env/.env.prod
    volumes:
      - pgdata:/var/lib/postgresql/data/

  certbot:
      image: certbot/certbot
      container_name: certbot
      volumes:
          - ./docker/certbot/conf:/etc/letsencrypt:rw
          - ./docker/certbot/www:/var/www/certbot:rw
      command: certonly --webroot --webroot-path=/var/www/certbot/ --email email@mail.com --agree-tos --no-eff-email -d example.com -d www.example.com
      depends_on:
        - nginx
  